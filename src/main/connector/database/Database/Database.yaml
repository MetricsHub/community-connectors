metrics:
  db.aborted.clients:
    description: The number of connections that were aborted.
    type: Counter
    unit: "{connection}"
  db.aborted.connects:
    description: The number of failed attempts to connect to the MySQL server.
    type: Counter
    unit: "{connection}"
  db.io.size{db.io.direction="received"}:
    description: The number of bytes received from all clients.
    type: Counter
    unit: By
  db.io.size{db.io.direction="sent"}:
    escription: The number of bytes sent to all clients.
    type: Counter
    unit: By
  db.connections:
    description: The number of connection attempts (successful or not) to the MySQL server.
    type: Counter
    unit: "{connection}"
  db.client.connection.count{db.client.connection.state="used"}:
    description: The number of active used client connections to the database.
    type: UpDownCounter
    unit: "{connection}"
  db.connections.max_used:
    description: The maximum number of connections that have been in use simultaneously since the server started.
    type: Gauge
    unit: "{connection}"
  db.connections.max_used.time:
    description: The time at which Max_used_connections reached its current value.
    type: Gauge
    unit: "s"
  db.query.execution_time.set_failed:
    description: The number of SELECT statements for which the attempt to set an execution timeout failed.
    type: Counter
    unit: "{select_statement}"
  db.query.execution_time.exceeded:
    description: The number of SELECT statements for which the execution timeout was exceeded.
    type: Counter
    unit: "{select_statement}"
  db.buffer.pool.data.size:
    description: The total number of bytes in the InnoDB buffer pool containing data.
    type: Gauge
    unit: By
  db.buffer.pool.pages:
    description: The number of pages in the InnoDB buffer pool
    type: Gauge
    unit: "{page}"
  db.buffer.pool.read_ahead:
    description: The number of pages read into the InnoDB buffer pool by the read-ahead background thread.
    type: Counter
    unit: "{page}"
  db.buffer.pool.operations{db.operation.direction="read"}:
    description: The number of logical read requests made to the InnoDB buffer pool.
    type: Counter
    unit: "{request}"
  db.buffer.pool.operations{db.operation.direction="write"}:
    description: The number of logical write requests made to the InnoDB buffer pool.
    type: Counter
    unit: "{request}"
  db.buffer.pool.disk_reads:
    description: The number of logical reads that InnoDB could not satisfy from the buffer pool, and had to read directly from disk.
    type: Counter
    unit: "{read}"
  db.innodb.operations{db.operation.direction="read"}:
    description: The total number of data reads (OS file reads).
    type: Counter
    unit: "{operation}"
  db.innodb.operations{db.operation.direction="write"}:
    description: The total number of data writes.
    type: Counter
    unit: "{operation}"
  db.innodb.io{db.io.direction="read"}:
    description: The amount of data read since the server was started.
    type: Counter
    unit: "By"
  db.innodb.io{db.io.direction="write"}:
    description: The amount of data written so far.
    type: Counter
    unit: "By"
  db.innodb.io{db.io.direction="read", db.io.state="pending"}:
    description: The current number of pending read operations in InnoDB.
    type: Gauge
    unit: "{operation}"
  db.innodb.io{db.io.direction="write", db.io.state="pending"}:
    description: The current number of pending write operations in InnoDB.
    type: Gauge
    unit: "{operation}"
  db.innodb.page{db.page.type="double_write"}:
    description: The number of pages that have been written to the doublewrite buffer.
    type: Counter
    unit: "{page}"
  db.innodb.operations{db.operation.type="double_write"}:
    description: The number of doublewrite operations that have been performed.
    type: Counter
    unit: "{operation}"
  db.innodb.files.open:
    description: The current number of files that InnoDB holds open.
    type: Gauge
    unit: "{file}"
  db.performance_schema.accounts_lost:
    description: The number of times a row could not be added to the accounts table because it was full.
    type: Counter
    unit: "1"
  db.performance_schema.cond_classes.lost:
    description: The number of condition instruments that could not be created.
    type: Counter
    unit: "1"
  db.performance_schema.digest_lost:
    description: The number of digest instances that could not be instrumented in the `events_statements_summary_by_digest` table.
    type: Counter
    unit: "1"
  db.performance_schema.file_classes_lost:
    description: The number of file instruments that could not be loaded.
    type: Counter
    unit: "{file}"
  db.performance_schema.file_handles_lost:
    description: The number of file instrument instances that could not be opened.
    type: Counter
    unit: "{file}"
  db.performance_schema.file_instances_lost:
    description: The number of file instrument instances that could not be created.
    type: Counter
    unit: "{file}"
  db.performance_schema.hosts_lost:
    description: The number of times a row could not be added to the hosts table because it was full.
    type: Counter
    unit: "1"
  db.performance_schema.index_stat_lost:
    description: The number of indexes for which statistics were lost.
    type: Counter
    unit: "{index}"
  db.performance_schema.memory_classes_lost:
    description: Count of memory instruments that could not be loaded.
    type: Counter
    unit: "{memory_instrument}"
  db.performance_schema.metadata_lock_lost:
    description: The number of metadata locks that could not be instrumented in the `metadata_locks` table.
    type: Counter
    unit: "{lock}"
  db.performance_schema.mutex_classes_lost:
    description: The number of mutex instruments that could not be loaded.
    type: Counter
    unit: "{mutex_instrument}"
  db.performance_schema.mutex_instances_lost:
    description: The number of mutex instrument instances that could not be created.
    type: Counter
    unit: "{mutex_instance}"
  db.innodb.row.lock.time:
    description: The total time spent acquiring row locks for InnoDB tables.
    type: Counter
    unit: "s"
  db.innodb.row.lock.time_avg:
    description: The average time to acquire a row lock for InnoDB tables.
    type: Gauge
    unit: "s"
  db.innodb.row.lock.time_max:
    description: The maximum time to acquire a row lock for InnoDB tables.
    type: Gauge
    unit: "s"
  db.innodb.row.lock.waits:
    description: The number of times operations on InnoDB tables had to wait for a row lock.
    type: Counter
    unit: "1"
  db.innodb.row.lock.current.waits:
    description: The number of row locks currently waited for by operations on InnoDB tables.
    type: Gauge
    unit: "{lock}"
  db.innodb.rows{db.operation.type="delete"}:
    description: The total number of rows deleted from InnoDB tables.
    type: Counter
    unit: "{row}"
  db.innodb.rows{db.operation.type="insert"}:
    description: The total number of rows inserted into InnoDB tables.
    type: Counter
    unit: "{row}"
  db.innodb.rows{db.operation.type="read"}:
    description: The total number of rows read from InnoDB tables.
    type: Counter
    unit: "{row}"
  db.innodb.rows{db.operation.type="update"}:
    description: The total number of rows updated in InnoDB tables in system-created schemas.
    type: Counter
    unit: "{row}"
  db.threads{db.thread.state="cached"}:
    description: The number of threads in the thread cache.
    type: Gauge
    unit: "{thread}"
  db.threads{db.thread.state="connected"}:
    description: The number of currently open connections.
    type: Gauge
    unit: "{connection}"
  db.threads{db.thread.state="created"}:
    description: The number of threads created to handle connections.
    type: Gauge
    unit: "{thread}"
  db.threads{db.thread.state="running"}:
    description: The number of threads that are not sleeping.
    type: Gauge
    unit: "{thread}"
  db.uptime:
    description: The total number of seconds the server has been up.
    type: Gauge
    unit: "s"
  db.uptime.since.flush_status:
    description: The number of seconds since the most recent FLUSH STATUS statement.
    type: Gauge
    unit: "s"
  db.queries{db.thread.state="slow"}:
    description: The number of queries that have taken more than long_query_time seconds.
    type: Counter
    unit: "{query}"
  db.queries:
    description: The total number of statements executed by the server, including statements within stored programs but excluding `COM_PING` and `COM_STATISTICS` commands.
    type: Counter
    unit: "{statement}"
