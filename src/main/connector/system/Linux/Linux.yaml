extends:
- ../System/System
metrics:
  system.service.status:
    description: Service Status
    type:
      stateSet:
        - running
        - dead
        - exited
connector:
  displayName: LinuxOS
  platform: Any platform with LinuxOS
  reliesOn: Linux OsCommands
  information: Gives OS specific information and metrics
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - linux
    criteria:
    - type: osCommand
      commandLine: /usr/bin/uname -o
      expectedResult: GNU/Linux
      errorMessage: Not a valid Linux host.
    tags: [ system ]
monitors:
  cpu:
    simple:
      type: multiInstance
      sources:
        source(1):
          # cpuId;user;nice;system;idle;iowait
          type: osCommand
          commandLine: /usr/bin/cat /proc/stat
          computes:
          - type: awk
            script: |
              /cpu[0-9]/ {
                sub("cpu","");
                print $1 ";" $2 / 1000 ";" $3 / 1000 ";" $4 / 1000 ";" $5 / 1000 ";" $6 / 1000
              }
      mapping:
        source: ${source::monitors.cpu.simple.sources.source(1)}
        attributes:
          id: $1
          name: ${awk::sprintf("%s %s", "cpu", $1)}
          system.cpu.logical_number: $1
        metrics:
          system.cpu.utilization{system.cpu.state="user"}: rate($2)
          system.cpu.utilization{system.cpu.state="nice"}: rate($3)
          system.cpu.utilization{system.cpu.state="system"}: rate($4)
          system.cpu.utilization{system.cpu.state="idle"}: rate($5)
          system.cpu.utilization{system.cpu.state="io_wait"}: rate($6)
          system.cpu.time{system.cpu.state="user"}: $2
          system.cpu.time{system.cpu.state="nice"}: $3
          system.cpu.time{system.cpu.state="system"}: $4
          system.cpu.time{system.cpu.state="idle"}: $5
          system.cpu.time{system.cpu.state="io_wait"}: $6
  memory:
    simple:
      sources:
        source(1):
          # memTotal;memFree;memUsed;memBuffers;memCached;memFreeUtilization;memUsedUtilization;memBuffersUtilization;memCachedUtilization
          type: osCommand
          commandLine: cat /proc/meminfo
          computes:
          - type: awk
            script: ${file::memory.awk}
      mapping:
        source: ${source::monitors.memory.simple.sources.source(1)}
        attributes:
          id: memory_usage
          system.memory.limit: $1
        metrics:
          system.memory.usage{system.memory.usage="free"}: $2
          system.memory.usage{system.memory.usage="used"}: $3
          system.memory.usage{system.memory.usage="buffers"}: $4
          system.memory.usage{system.memory.usage="cached"}: $5
          system.memory.utilization{system.memory.usage="free"}: $6
          system.memory.utilization{system.memory.usage="used"}: $7
          system.memory.utilization{system.memory.usage="buffers"}: $8
          system.memory.utilization{system.memory.usage="cached"}: $9
  disk:
    simple:
      type: multiInstance
      sources:
        source(1):
          # id;reads;readsMerged;readTime;writes;writesMerged;writeTime;ioTime
          type: osCommand
          commandLine: cat /proc/diskstats
          selectColumns: 3,4,5,7,8,9,11,13
          computes:
          - type: divide
            column: 2
            value: 1000
          - type: divide
            column: 5
            value: 1000
          - type: divide
            column: 8
            value: 1000
      mapping:
        source: ${source::monitors.disk.simple.sources.source(1)}
        attributes:
          id: $1
          system.disk.device: $1
        metrics:
          system.disk.operations{direction:read}: $2
          system.disk.merged{direction:read}: $3
          system.disk.operation_time{direction:read}: $4
          system.disk.operations{direction:write}: $5
          system.disk.merged{direction:write}: $6
          system.disk.operation_time{direction:write}: $7
          system.disk.io_time: $8
  service:
    simple:
      type: multiInstance
      sources:
        source(1):
          # serviceName;load;active;sub;description
          type: osCommand
          commandLine: /usr/bin/systemctl list-units --type=service --all | sed 's/^[^a-zA-Z0-9]*//'
          computes:
          - type: awk
            script: |
              /\.service/ {
                sub("\.service", "");
                printf($1 ";" $2 ";" $3 ";" $4 ";")
                for (i=5; i<=NF; i++) {
                  printf("%s ", $i)
                }
                printf("\n")
              }
          - type: translate
            column: 2
            translationTable: ${translation::serviceLoadedTranslationTable}
          - type: translate
            column: 3
            translationTable: ${translation::serviceActiveTranslationTable}
      mapping:
        source: ${source::monitors.service.simple.sources.source(1)}
        attributes:
          id: $1
          description: $5
        metrics:
          system.service.status{state="loaded"}: $2
          system.service.status{state="active"}: $3
          system.service.status: $4
  filesystem:
    simple:
      type: multiInstance
      sources:
        source(1):
          # filesystem;mountpoint;type;used;available
          type: osCommand
          commandLine: /usr/bin/df -B1 --output=source,target,fstype,used,avail
          computes:
          - type: awk
            script: NR > 1 {print $1 "(" $2 ")" ";" $2 ";" $3 ";" $4 ";" $5}
      mapping:
        source: ${source::monitors.filesystem.simple.sources.source(1)}
        attributes:
          id: $1
          system.filesystem.device: $1
          system.filesystem.mountpoint: $2
          system.filesystem.type: $3
        metrics:
          system.filesystem.usage{system.filesystem.state=used}: $4
          system.filesystem.usage{system.filesystem.state=free}: $5
translations:
  serviceLoadedTranslationTable:
    not-found: "0"
    loaded: "1"
  serviceActiveTranslationTable:
    inactive: "0"
    active: "1"