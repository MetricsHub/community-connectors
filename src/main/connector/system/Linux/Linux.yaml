extends:
- ../../semconv/System
connector:
  displayName: Linux System
  platforms: Linux
  reliesOn: Linux OsCommands
  information: Gives OS specific information and metrics
  detection:
    connectionTypes:
    - remote
    - local
    appliesTo:
    - linux
    criteria:
    - type: commandLine
      commandLine: /usr/bin/uname -o || /bin/uname -o
      expectedResult: GNU/Linux
      errorMessage: Not a valid Linux host.
    tags: [ system, linux ]
monitors:
  cpu:
    simple:
      type: multiInstance
      sources:
        cpuInfo:
          # cpuId;user;nice;system;idle;iowait
          type: commandLine
          commandLine: cat /proc/stat
          computes:
          - type: awk
            script: |
              /cpu[0-9]/ {
                sub("cpu","");
                print $1 ";" $2 / 100 ";" $3 / 100 ";" $4 / 100 ";" $5 / 100 ";" $6 / 100
              }
      mapping:
        source: ${source::cpuInfo}
        attributes:
          id: $1
          name: ${awk::sprintf("%s %s", "cpu", $1)}
          system.cpu.logical_number: $1
        metrics:
          system.cpu.utilization{system.cpu.state="user"}: rate($2)
          system.cpu.utilization{system.cpu.state="nice"}: rate($3)
          system.cpu.utilization{system.cpu.state="system"}: rate($4)
          system.cpu.utilization{system.cpu.state="idle"}: rate($5)
          system.cpu.utilization{system.cpu.state="io_wait"}: rate($6)
          system.cpu.time{system.cpu.state="user"}: $2
          system.cpu.time{system.cpu.state="nice"}: $3
          system.cpu.time{system.cpu.state="system"}: $4
          system.cpu.time{system.cpu.state="idle"}: $5
          system.cpu.time{system.cpu.state="io_wait"}: $6
  memory:
    simple:
      sources:
        memoryInfo:
          # memSystem
          type: commandLine
          commandLine: /usr/bin/lsmem -b ; cat /proc/meminfo
          computes:
          - type: awk
            script: ${file::memory.awk}
      mapping:
        source: ${source::memoryInfo}
        attributes:
          id: memory_usage
        metrics:
          system.memory.limit: $1
          system.memory.usage{system.memory.state="free"}: $2
          system.memory.usage{system.memory.state="used"}: $3
          system.memory.usage{system.memory.state="buffers"}: $4
          system.memory.usage{system.memory.state="cached"}: $5
          system.memory.utilization{system.memory.state="free"}: $6
          system.memory.utilization{system.memory.state="used"}: $7
          system.memory.utilization{system.memory.state="buffers"}: $8
          system.memory.utilization{system.memory.state="cached"}: $9
  network:
    simple:
      sources:
        networkInformation:
          # Interface;MTU;State;RX_bytes;RX_packets;RX_errors;RX_dropped;RX_missed;RX_mcast;TX_bytes;TX_packets;TX_errors;TX_dropped;TX_carrier;TX_collsns";
          type: commandLine
          commandLine: /usr/sbin/ip -s link
          computes:
          - type: awk
            script: ${file::network.awk}
        interfaceInformation:
          type: commandLine
          commandLine: ls -l /sys/class/net
          computes:
          - type: awk
            script: |
              $0 !~ /virtual/ && $0 !~ /total/ {print $9}
        networkPhysicalInterface:
          type: tableJoin
          leftTable: ${source::networkInformation}
          rightTable: ${source::interfaceInformation}
          leftKeyColumn: 1
          rightKeyColumn: 1
      mapping:
        source: ${source::networkPhysicalInterface}
        attributes:
          id: $1
          network.interface.name: $1
        metrics:
          system.network.dropped{network.io.direction="transmit"}: $13
          system.network.dropped{network.io.direction="receive"}: $7
          system.network.packets{network.io.direction="transmit"}: $11
          system.network.packets{network.io.direction="receive"}: $5
          system.network.errors{network.io.direction="transmit"}: $12
          system.network.errors{network.io.direction="receive"}: $6
          system.network.io{network.io.direction="transmit"}: $10
          system.network.io{network.io.direction="receive"}: $4
  physical_disk:
    simple:
      type: multiInstance
      sources:
        physicalDiskActivity:
        #OperationsIORead;OperationsIOWrite;OperationsRead;OperationsWrite;MergedRead;MergedWrite;OperationTimeRead;OperationTimeWrite;IOTime
          type: commandLine
          commandLine: cat /proc/diskstats
          computes:
          - type: awk
            script: |
              $3 ~ /^(?:[shv]d[a-z]|nvme[0-9]+n[0-9]+)$/ {
                print $3 ";" $6*512 ";" $10*512 ";" $4 ";" $8 ";" $5 ";" $9 ";" $7/1000 ";" $11/1000 ";" $13/1000
              }
      mapping:
        source: ${source::physicalDiskActivity}
        attributes:
          id: $1
          system.device: $1
        metrics:
          system.disk.io{disk.io.direction="read"}: $2
          system.disk.io{disk.io.direction="write"}: $3
          system.disk.operations{disk.io.direction="read"}: $4
          system.disk.operations{disk.io.direction="write"}: $5
          system.disk.merged{disk.io.direction="read"}: $6
          system.disk.merged{disk.io.direction="write"}: $7
          system.disk.operation_time{disk.io.direction="read"}: $8
          system.disk.operation_time{disk.io.direction="write"}: $9
          system.disk.io_time: $10
  file_system:
    simple:
      type: multiInstance
      sources:
        fileSystemInfo:
          # filesystem;mountpoint;type;used;available
          type: commandLine
          commandLine: /usr/bin/df -B1 --output=source,target,fstype,used,avail,size
          computes:
          - type: awk
            script: NR > 1 && $1 ~ /\/dev/ {print $1 "(" $2 ")" ";" $2 ";" $3 ";" $4 ";" $5 ";" $4 / $6 ";" $5 / $6 ";" $6 - ($4 + $5) ";" ($6 - ($4 + $5)) / $6}
      mapping:
        source: ${source::fileSystemInfo}
        attributes:
          id: $1
          system.device: $1
          system.filesystem.mountpoint: $2
          system.filesystem.type: $3
        metrics:
          system.filesystem.usage{system.filesystem.state="used"}: $4
          system.filesystem.usage{system.filesystem.state="free"}: $5
          system.filesystem.usage{system.filesystem.state="reserved"}: $8
          system.filesystem.utilization{system.filesystem.state="used"}: $6
          system.filesystem.utilization{system.filesystem.state="free"}: $7
          system.filesystem.utilization{system.filesystem.state="reserved"}: $9
  system:
    simple:
      sources:
        # Distribution;Version;Kernel
        osInformation:
          type: commandLine
          commandLine: |
            . /etc/os-release
            echo "$NAME;$VERSION;`uname -r`;`cut -d. -f1 /proc/uptime`"
      mapping:
        source: ${source::osInformation}
        attributes:
          id: $3
          name: $1
          version: $2
          os_version: $3
        metrics:
          system.uptime: $4
translations:
  serviceLoadedTranslationTable:
    not-found: "0"
    loaded: "1"
  serviceActiveTranslationTable:
    inactive: "0"
    active: "1"